{"version":3,"sources":["../../src/middleware/postmark-helper.js"],"names":["postmark_key","doc_id","pmClient","Client","sendNotification","req","res","next","emailList","receiversEmails","join","sendEmail","err","to","console","log","date","Date","toTimeString","runningTime","convertToTime","timer","runTimer","startTime","endTime","timeDiff","rawSecs","secs","Math","round","toString","mins","floor","revisedMins","test","revisedSecs"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;IACOA,Y,kBAAAA,Y;IAAcC,M,kBAAAA,M;;AACrB,IAAMC,WAAW,IAAI,mBAASC,MAAb,CAAoBH,YAApB,CAAjB;;AAEA;AACA,SAASI,gBAAT,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0C;AAAA,MACjCC,SADiC,GACpBH,GADoB,CACjCG,SADiC;;;AAGxC,MAAIA,SAAJ,EAAe;AACb,QAAMC,kBAAkBD,UAAUE,IAAV,CAAe,IAAf,CAAxB;;AAEAR,aAASS,SAAT,CAAmB;AACjB,cAAQ,+BADS;AAEjB,YAAMF,eAFW;AAGjB,iBAAW,kBAHM;AAIjB,kBAAY,+DACV,2CADU,GACoCR;AAL/B,KAAnB,EAOA,UAACW,GAAD,EAAMC,EAAN,EAAa;AACX,UAAID,GAAJ,EAAS;AACPE,gBAAQC,GAAR,CAAYH,GAAZ;AACAL;AACD;;AAED,UAAMS,OAAO,IAAIC,IAAJ,EAAb;AACAH,cAAQC,GAAR,CAAYC,KAAKE,YAAL,EAAZ,EAAiC,kBAAjC;AACAJ,cAAQC,GAAR,CAAYF,EAAZ;AACA,UAAMM,cAAcC,cAAcf,IAAIgB,KAAlB,EAAyBL,IAAzB,CAApB;AACAF,cAAQC,GAAR,0BAAmCI,WAAnC;AACAZ;AACD,KAnBD;AAoBD,GAvBD,MAuBO;AACL,QAAMS,OAAO,IAAIC,IAAJ,EAAb;AACAH,YAAQC,GAAR,CAAYC,KAAKE,YAAL,EAAZ,EAAiC,qBAAjC;AACA,QAAMC,cAAcC,cAAcf,IAAIiB,QAAlB,EAA4BN,IAA5B,CAApB;AACAF,YAAQC,GAAR,0BAAmCI,WAAnC;AACAZ;AACD;AACF;;AAED,SAASa,aAAT,CAAuBG,SAAvB,EAAkCC,OAAlC,EAA2C;AACzC,MAAMC,WAAWD,UAAUD,SAA3B;AACA,MAAMG,UAAUD,WAAW,IAA3B;AACA,MAAME,OAAO,CAACC,KAAKC,KAAL,CAAWH,UAAU,CAArB,IAA0B,EAA3B,EAA+BI,QAA/B,EAAb;AACA,MAAMC,OAAOH,KAAKI,KAAL,CAAWN,UAAU,EAArB,EAAyBI,QAAzB,EAAb;AACA,MAAMG,cAAc,SAASC,IAAT,CAAcH,IAAd,IAAsB,MAAMA,IAA5B,GAAmCA,IAAvD;AACA,MAAMI,cAAc,SAASD,IAAT,CAAcP,IAAd,IAAsB,MAAMA,IAA5B,GAAmCA,IAAvD;;AAEA,SAAUM,WAAV,SAAyBE,WAAzB;AACD;;kBAEc/B,gB","file":"postmark-helper.js","sourcesContent":["import configAuth from '../config/auth.js';\nimport postmark from 'postmark';\nconst {postmark_key, doc_id} = configAuth;\nconst pmClient = new postmark.Client(postmark_key);\n\n// Send notification e-mail\nfunction sendNotification(req, res, next) {\n  const {emailList} = req;\n\n  if (emailList) {\n    const receiversEmails = emailList.join(', ');\n\n    pmClient.sendEmail({\n      'From': 'search.melbourne@mediacom.com',\n      'To': receiversEmails,\n      'Subject': 'Check URL Errors',\n      'TextBody': 'Check which URLs have changed, and which have errors here:' +\n        '\\nhttps://docs.google.com/spreadsheets/d/' + doc_id\n    },\n    (err, to) => {\n      if (err) {\n        console.log(err);\n        next();\n      }\n\n      const date = new Date();\n      console.log(date.toTimeString(), 'E-mail sent to: ');\n      console.log(to);\n      const runningTime = convertToTime(req.timer, date);\n      console.log(`Total running time: ${runningTime}`);\n      next();\n    });\n  } else {\n    const date = new Date();\n    console.log(date.toTimeString(), 'No e-mail addresses');\n    const runningTime = convertToTime(req.runTimer, date);\n    console.log(`Total running time: ${runningTime}`);\n    next();\n  }\n}\n\nfunction convertToTime(startTime, endTime) {\n  const timeDiff = endTime - startTime;\n  const rawSecs = timeDiff / 1000;\n  const secs = (Math.round(rawSecs % 6) / 10).toString();\n  const mins = Math.floor(rawSecs / 60).toString();\n  const revisedMins = /\\d\\.\\d/.test(mins) ? '0' + mins : mins;\n  const revisedSecs = /\\d\\.\\d/.test(secs) ? '0' + secs : secs;\n\n  return `${revisedMins}:${revisedSecs}`;\n}\n\nexport default sendNotification;\n"]}