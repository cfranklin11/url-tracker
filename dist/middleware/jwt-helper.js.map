{"version":3,"sources":["../../src/middleware/jwt-helper.js"],"names":["createToken","req","res","next","jwt","sign","action","secret","expiresIn","checkToken","token","body","query","headers","verify","err","decoded","json","success","message","status","send"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACnCF,MAAIG,GAAJ,GAAU,uBAAIC,IAAJ,CAAS,EAACC,QAAQ,OAAT,EAAT,EACR,eAAKC,MADG,EAER,EAACC,WAAW,EAAZ,EAFQ,CAAV;AAIAL;AACD;;AAED,SAASM,UAAT,CAAoBR,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAClC,MAAMO,QACJT,IAAIU,IAAJ,CAASD,KAAT,IAAkBT,IAAIW,KAAJ,CAAUF,KAA5B,IAAqCT,IAAIY,OAAJ,CAAY,gBAAZ,CADvC;;AAGA;AACA;AACA;AACA,MAAIH,KAAJ,EAAW;AACT,2BAAII,MAAJ,CAAWJ,KAAX,EAAkB,eAAKH,MAAvB,EAA+B,UAASQ,GAAT,EAAcC,OAAd,EAAuB;AACpD,UAAID,GAAJ,EAAS;AACPb,YAAIe,IAAJ,CAAS;AACPC,mBAAS,KADF;AAEPC,mBAAS;AAFF,SAAT;AAID,OALD,MAKO;AACLhB;AACD;AACF,KATD;AAUD,GAXD,MAWO;AACLD,QAAIkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBH,eAAS,KADU;AAEnBC,eAAS;AAFU,KAArB;AAID;AACF;;QAEOnB,W,GAAAA,W;QAAaS,U,GAAAA,U","file":"jwt-helper.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport auth from '../config/auth.js';\n\nfunction createToken(req, res, next) {\n  req.jwt = jwt.sign({action: 'crawl'},\n    auth.secret,\n    {expiresIn: 30}\n  );\n  next();\n}\n\nfunction checkToken(req, res, next) {\n  const token =\n    req.body.token || req.query.token || req.headers['x-access-token'];\n\n  // If token exists and is valid, start crawling the website,\n  // otherwise return success = false to API call, preventing redundant\n  // calls creating multiple, parallel crawling processes\n  if (token) {\n    jwt.verify(token, auth.secret, function(err, decoded) {\n      if (err) {\n        res.json({\n          success: false,\n          message: 'Failed to authenticate token.'\n        });\n      } else {\n        next();\n      }\n    });\n  } else {\n    res.status(403).send({\n      success: false,\n      message: 'No token provided.'\n    });\n  }\n}\n\nexport {createToken, checkToken};\n"]}